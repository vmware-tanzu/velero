name: "Run the E2E test on kind"
on:
  push:
  pull_request:
    # Do not run when the change only includes these directories.
    paths-ignore:
      - "site/**"
      - "design/**"
permissions:
  contents: read

jobs:
  # Build the Velero CLI and image once for all Kubernetes versions, and cache it so the fan-out workers can get it.
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'go.mod'
      # Look for a CLI that's made for this PR
      - name: Fetch built CLI
        id: cli-cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ./_output/bin/linux/amd64/velero
          # The cache key a combination of the current PR number and the commit SHA
          key: velero-cli-${{ github.event.pull_request.number }}-${{ github.sha }}
      - name: Fetch built image
        id: image-cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ./velero.tar
          # The cache key a combination of the current PR number and the commit SHA
          key: velero-image-${{ github.event.pull_request.number }}-${{ github.sha }}
      # If no binaries were built for this PR, build it now.
      - name: Build Velero CLI
        if: steps.cli-cache.outputs.cache-hit != 'true'
        run: |
          make local
      # If no image were built for this PR, build it now.
      - name: Build Velero Image
        if: steps.image-cache.outputs.cache-hit != 'true'
        run: |
          IMAGE=velero VERSION=pr-test make container
          docker save velero:pr-test -o ./velero.tar
  # Run E2E test against all Kubernetes versions on kind
  run-e2e-test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s:
          - 1.23.17
          - 1.24.17
          - 1.25.16
          - 1.26.13
          - 1.27.10
          - 1.28.6
          - 1.29.1
        labels:
          # labels are used to filter running E2E cases
          - Basic && (ClusterResource || NodePort || StorageClass)
          - ResourceFiltering && !Restic
          - ResourceModifier || (Backups && BackupsSync) || PrivilegesMgmt || OrderedResources
          - (NamespaceMapping && Single && Restic) || (NamespaceMapping && Multiple && Restic)
      fail-fast: false
    steps:
      - name: Check out the code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up Go
        uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        with:
          go-version-file: 'go.mod'
      - name: Install MinIO
        run:
          docker run -d --rm -p 9000:9000 -e "MINIO_ACCESS_KEY=minio" -e "MINIO_SECRET_KEY=minio123" -e "MINIO_DEFAULT_BUCKETS=bucket,additional-bucket" bitnami/minio:2021.6.17-debian-10-r7
      - uses: engineerd/setup-kind@aa272fe2a7309878ffc2a81c56cfe3ef108ae7d0 # v0.5.0
        with:
          version: "v0.21.0"
          image: "kindest/node:v${{ matrix.k8s }}"
      - name: Fetch built CLI
        id: cli-cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ./_output/bin/linux/amd64/velero
          key: velero-cli-${{ github.event.pull_request.number }}-${{ github.sha }}
      - name: Fetch built Image
        id: image-cache
        uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: ./velero.tar
          key: velero-image-${{ github.event.pull_request.number }}-${{ github.sha }}
      - name: Load Velero Image
        run:
          kind load image-archive velero.tar
      - name: Run E2E test
        run: |
          cat << EOF > /tmp/credential
          [default]
          aws_access_key_id=minio
          aws_secret_access_key=minio123
          EOF

          # Match kubectl version to k8s server version
          curl -LO https://dl.k8s.io/release/v${{ matrix.k8s }}/bin/linux/amd64/kubectl
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

          GOPATH=~/go \
              CLOUD_PROVIDER=kind \
              OBJECT_STORE_PROVIDER=aws \
              BSL_CONFIG=region=minio,s3ForcePathStyle="true",s3Url=http://$(hostname -i):9000 \
              CREDS_FILE=/tmp/credential \
              BSL_BUCKET=bucket \
              ADDITIONAL_OBJECT_STORE_PROVIDER=aws \
              ADDITIONAL_BSL_CONFIG=region=minio,s3ForcePathStyle="true",s3Url=http://$(hostname -i):9000 \
              ADDITIONAL_CREDS_FILE=/tmp/credential \
              ADDITIONAL_BSL_BUCKET=additional-bucket \
              VELERO_IMAGE=velero:pr-test \
              GINKGO_LABELS="${{ matrix.labels }}" \
              make -C test/ run-e2e
        timeout-minutes: 30
      - name: Upload debug bundle
        if: ${{ failure() }}
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: DebugBundle
          path: /home/runner/work/velero/velero/test/e2e/debug-bundle*
